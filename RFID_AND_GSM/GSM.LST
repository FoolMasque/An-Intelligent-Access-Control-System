C51 COMPILER V9.01   GSM                                                                   05/15/2019 23:33:29 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE GSM
OBJECT MODULE PLACED IN GSM.OBJ
COMPILER INVOKED BY: D:\KEIL\C51\BIN\C51.EXE GSM.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<GSM.h>
   2          
   3          
   4          /**********************************
   5          LCD函数定义 
   6          **********************************/
   7          /*******************************************************************************
   8          * 函 数 名         : Lcd1602_Delay1ms
   9          * 函数功能                 : 延时函数，延时1ms
  10          * 输    入         : c
  11          * 输    出         : 无
  12          * 说    名         : 该函数是在12MHZ晶振下，12分频单片机的延时。
  13          *******************************************************************************/
  14          
  15          void Lcd1602_Delay1ms(u16 c)   //误差 0us
  16          {
*** WARNING C235 IN LINE 16 OF GSM.C: parameter 1: different types
  17   1          u16 a,b;
  18   1              for (; c>0; c--)
  19   1              {
  20   2                       for (b=199;b>0;b--)
  21   2                       {
  22   3                              for(a=1;a>0;a--);
  23   3                       }      
  24   2              }
  25   1              
  26   1      }
  27          
  28          /*******************************************************************************
  29          * 函 数 名         : LcdWriteCom
  30          * 函数功能                 : 向LCD写入一个字节的命令
  31          * 输    入         : com
  32          * 输    出         : 无
  33          *******************************************************************************/
  34          void LcdWriteCom(u8 com)          //写入命令
  35          {
  36   1              LCD1602_E = 0;     //使能
  37   1              LCD1602_RS = 0;    //选择发送命令
  38   1              LCD1602_RW = 0;    //选择写入
  39   1              
  40   1              LCD1602_DATAPINS = com;     //放入命令
  41   1              Lcd1602_Delay1ms(1);            //等待数据稳定
  42   1      
  43   1              LCD1602_E = 1;            //写入时序
  44   1              Lcd1602_Delay1ms(5);      //保持时间
  45   1              LCD1602_E = 0;
  46   1      }
  47          
  48          /*******************************************************************************
  49          * 函 数 名         : LcdWriteData
  50          * 函数功能                 : 向LCD写入一个字节的数据
  51          * 输    入         : dat
  52          * 输    出         : 无
  53          *******************************************************************************/                                   
  54          void LcdWriteData(u8 dat)                       //写入数据
C51 COMPILER V9.01   GSM                                                                   05/15/2019 23:33:29 PAGE 2   

  55          {
  56   1              LCD1602_E = 0;  //使能清零
  57   1              LCD1602_RS = 1; //选择输入数据
  58   1              LCD1602_RW = 0; //选择写入
  59   1      
  60   1              LCD1602_DATAPINS = dat; //写入数据
  61   1              Lcd1602_Delay1ms(1);
  62   1      
  63   1              LCD1602_E = 1;   //写入时序
  64   1              Lcd1602_Delay1ms(5);   //保持时间
  65   1              LCD1602_E = 0;
  66   1      }
  67          
  68          /*******************************************************************************
  69          * 函 数 名       : LcdInit()
  70          * 函数功能               : 初始化LCD屏
  71          * 输    入       : 无
  72          * 输    出       : 无
  73          *******************************************************************************/                   
  74          void LcdInit()                                            //LCD初始化子程序
  75          {
  76   1          Lcd1602_Delay1ms(200);
  77   1              LcdWriteCom(0x38);  //开显示
  78   1              LcdWriteCom(0x38);
  79   1              LcdWriteCom(0x38);
  80   1              LcdWriteCom(0x0c);  //开显示不显示光标
  81   1      //      LcdWriteCom(0x06);  //写一个指针加1
  82   1              LcdWriteCom(0x01);  //清屏
  83   1      //      LcdWriteCom(0x80);  //设置数据指针起点
  84   1      }
  85          
  86          /************************************************************
  87          程序说明：
  88          本程序运行后如果gprs模块找到服务商信号可实现接打电话发送短信等功能
  89          
  90          
  91          *************************************************************/
  92             
  93          //注意，无论接收到信号还是发送完信号，都会进中断服务程序的
  94          /*初始化程序（必须使用，否则无法收发），次程序将会使用定时器1*/
  95          void SerialInti()//初始化程序（必须使用，否则无法收发）
  96          {
  97   1              TMOD=0x20;//定时器1操作模式2:8位自动重载定时器  
  98   1              TH1=0xfd;//装入初值，波特率9600
  99   1              TL1=0xfd;
 100   1              
 101   1              TR1=1;//打开定时器
 102   1              SM0=0;//设置串行通讯工作模式，（10为一部发送，波特率可变，由定时器1的溢出率控制）
 103   1              SM1=1;//(同上)在此模式下，定时器溢出一次就发送一个位的数据
 104   1              REN=1;//串行接收允许位（要先设置sm0sm1再开串行允许）
 105   1              EA=1;//开总中断
 106   1              ES=1;//开串行口中断     
 107   1      }
 108          
 109          void Uart1Send(u8 c)
 110          {
 111   1              SBUF=c;
 112   1              while(!TI);//等待发送完成信号（TI=1）出现
 113   1              TI=0;   
 114   1      }
 115          //串行口连续发送char型数组，遇到终止号/0将停止
 116          void Uart1Sends(u8 *str)
C51 COMPILER V9.01   GSM                                                                   05/15/2019 23:33:29 PAGE 3   

 117          {
 118   1          ES = 0;
 119   1              while(*str!='\0')
 120   1              {
 121   2                      SBUF=*str;
 122   2                      while(!TI);//等待发送完成信号（TI=1）出现
 123   2                      TI=0;
 124   2                      str++;
 125   2              }
 126   1              ES = 1;
 127   1      }
 128          //延时函数大概是1s钟，不过延时大的话不准...
 129          void DelaySec(int sec)
 130          {
 131   1              u16 i , j= 0;
 132   1              for(i=0; i<sec; i++)
 133   1              {
 134   2                      for(j=0; j<65533; j++)
 135   2                      {       
 136   3                      }
 137   2              }
 138   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    226    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
